{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Code/japanese-learning/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["import NextAuth from \"next-auth\";\nimport GoogleProvider from \"next-auth/providers/google\";\nimport { google } from \"googleapis\";\n\n// Khởi tạo Google Sheets API\nconst initGoogleSheets = async () => {\n  try {\n    const auth = new google.auth.GoogleAuth({\n      credentials: {\n        client_email: process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL,\n        private_key: process.env.GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY?.replace(/\\\\n/g, '\\n'),\n      },\n      scopes: ['https://www.googleapis.com/auth/spreadsheets'],\n    });\n\n    const sheets = google.sheets({\n      version: 'v4',\n      auth,\n    });\n\n    return sheets;\n  } catch (error) {\n    console.error('Lỗi khởi tạo Google Sheets:', error);\n    return null;\n  }\n};\n\n// Lưu dữ liệu người dùng vào Google Sheet\nconst saveUserToSheet = async (user: any) => {\n  try {\n    const sheets = await initGoogleSheets();\n    if (!sheets) return;\n\n    const spreadsheetId = process.env.GOOGLE_SHEET_ID;\n    if (!spreadsheetId) {\n      console.error('GOOGLE_SHEET_ID không được định nghĩa');\n      return;\n    }\n\n    // Kiểm tra xem người dùng đã tồn tại chưa\n    const userExists = await sheets.spreadsheets.values.get({\n      spreadsheetId,\n      range: 'Users!A:A',\n    });\n\n    const existingUsers = userExists.data.values || [];\n    const userIds = existingUsers.map((row: any) => row[0]);\n    \n    if (userIds.includes(user.id)) {\n      // Cập nhật thông tin người dùng nếu đã tồn tại\n      const rowIndex = userIds.indexOf(user.id) + 1;\n      await sheets.spreadsheets.values.update({\n        spreadsheetId,\n        range: `Users!A${rowIndex}:E${rowIndex}`,\n        valueInputOption: 'RAW',\n        requestBody: {\n          values: [[\n            user.id, \n            user.name,\n            user.email,\n            user.image,\n            new Date().toISOString()\n          ]]\n        }\n      });\n    } else {\n      // Thêm người dùng mới\n      await sheets.spreadsheets.values.append({\n        spreadsheetId,\n        range: 'Users!A:E',\n        valueInputOption: 'RAW',\n        insertDataOption: 'INSERT_ROWS',\n        requestBody: {\n          values: [[\n            user.id, \n            user.name,\n            user.email,\n            user.image,\n            new Date().toISOString()\n          ]]\n        }\n      });\n    }\n  } catch (error) {\n    console.error('Lỗi khi lưu người dùng vào Google Sheet:', error);\n  }\n};\n\nconst handler = NextAuth({\n  providers: [\n    GoogleProvider({\n      clientId: process.env.GOOGLE_CLIENT_ID as string,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET as string,\n    }),\n  ],\n  callbacks: {\n    async signIn({ user }) {\n      try {\n        if (user) {\n          await saveUserToSheet(user);\n        }\n        return true;\n      } catch (error) {\n        console.error(\"Lỗi khi đăng nhập:\", error);\n        return true; // Vẫn cho phép đăng nhập ngay cả khi lưu thất bại\n      }\n    },\n    async session({ session, token }) {\n      if (session.user && token.sub) {\n        session.user.id = token.sub;\n      }\n      return session;\n    },\n    async jwt({ token, user }) {\n      if (user) {\n        token.id = user.id;\n      }\n      return token;\n    },\n  },\n  pages: {\n    signIn: \"/auth/signin\",\n    signOut: \"/auth/signout\",\n    error: \"/auth/error\",\n  },\n  secret: process.env.NEXTAUTH_SECRET,\n});\n\nexport { handler as GET, handler as POST }; "],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEA,6BAA6B;AAC7B,MAAM,mBAAmB;IACvB,IAAI;QACF,MAAM,OAAO,IAAI,qJAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YACtC,aAAa;gBACX,cAAc,QAAQ,GAAG,CAAC,4BAA4B;gBACtD,aAAa,QAAQ,GAAG,CAAC,kCAAkC,EAAE,QAAQ,QAAQ;YAC/E;YACA,QAAQ;gBAAC;aAA+C;QAC1D;QAEA,MAAM,SAAS,qJAAA,CAAA,SAAM,CAAC,MAAM,CAAC;YAC3B,SAAS;YACT;QACF;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO;IACT;AACF;AAEA,0CAA0C;AAC1C,MAAM,kBAAkB,OAAO;IAC7B,IAAI;QACF,MAAM,SAAS,MAAM;QACrB,IAAI,CAAC,QAAQ;QAEb,MAAM,gBAAgB,QAAQ,GAAG,CAAC,eAAe;QACjD,IAAI,CAAC,eAAe;YAClB,QAAQ,KAAK,CAAC;YACd;QACF;QAEA,0CAA0C;QAC1C,MAAM,aAAa,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC;YACtD;YACA,OAAO;QACT;QAEA,MAAM,gBAAgB,WAAW,IAAI,CAAC,MAAM,IAAI,EAAE;QAClD,MAAM,UAAU,cAAc,GAAG,CAAC,CAAC,MAAa,GAAG,CAAC,EAAE;QAEtD,IAAI,QAAQ,QAAQ,CAAC,KAAK,EAAE,GAAG;YAC7B,+CAA+C;YAC/C,MAAM,WAAW,QAAQ,OAAO,CAAC,KAAK,EAAE,IAAI;YAC5C,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC;gBACtC;gBACA,OAAO,CAAC,OAAO,EAAE,SAAS,EAAE,EAAE,UAAU;gBACxC,kBAAkB;gBAClB,aAAa;oBACX,QAAQ;wBAAC;4BACP,KAAK,EAAE;4BACP,KAAK,IAAI;4BACT,KAAK,KAAK;4BACV,KAAK,KAAK;4BACV,IAAI,OAAO,WAAW;yBACvB;qBAAC;gBACJ;YACF;QACF,OAAO;YACL,sBAAsB;YACtB,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC;gBACtC;gBACA,OAAO;gBACP,kBAAkB;gBAClB,kBAAkB;gBAClB,aAAa;oBACX,QAAQ;wBAAC;4BACP,KAAK,EAAE;4BACP,KAAK,IAAI;4BACT,KAAK,KAAK;4BACV,KAAK,KAAK;4BACV,IAAI,OAAO,WAAW;yBACvB;qBAAC;gBACJ;YACF;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4CAA4C;IAC5D;AACF;AAEA,MAAM,UAAU,CAAA,GAAA,uIAAA,CAAA,UAAQ,AAAD,EAAE;IACvB,WAAW;QACT,CAAA,GAAA,qJAAA,CAAA,UAAc,AAAD,EAAE;YACb,UAAU,QAAQ,GAAG,CAAC,gBAAgB;YACtC,cAAc,QAAQ,GAAG,CAAC,oBAAoB;QAChD;KACD;IACD,WAAW;QACT,MAAM,QAAO,EAAE,IAAI,EAAE;YACnB,IAAI;gBACF,IAAI,MAAM;oBACR,MAAM,gBAAgB;gBACxB;gBACA,OAAO;YACT,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,sBAAsB;gBACpC,OAAO,MAAM,kDAAkD;YACjE;QACF;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,IAAI,QAAQ,IAAI,IAAI,MAAM,GAAG,EAAE;gBAC7B,QAAQ,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG;YAC7B;YACA,OAAO;QACT;QACA,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACvB,IAAI,MAAM;gBACR,MAAM,EAAE,GAAG,KAAK,EAAE;YACpB;YACA,OAAO;QACT;IACF;IACA,OAAO;QACL,QAAQ;QACR,SAAS;QACT,OAAO;IACT;IACA,QAAQ,QAAQ,GAAG,CAAC,eAAe;AACrC","debugId":null}}]
}