{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Code/japanese-learning/components/features/kanji-recognition/KanjiCanvas.tsx"],"sourcesContent":["// components/features/kanji-recognition/KanjiCanvas.tsx\n\"use client\";\n\nimport { useRef, useState, useEffect, useCallback } from \"react\";\nimport { KanjiItem } from \"@/types\";\n\ninterface KanjiCanvasProps {\n  onRecognizeKanji: (kanjiData: KanjiItem | null) => void;\n  isLoading: boolean;\n  setIsLoading: (loading: boolean) => void;\n}\n\n// Define stroke type for better type safety\ninterface StrokePoint {\n  x: number;\n  y: number;\n}\n\ninterface Stroke {\n  points: StrokePoint[];\n}\n\nexport default function KanjiCanvas({ \n  onRecognizeKanji,\n  isLoading,\n  setIsLoading\n}: KanjiCanvasProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [ctx, setCtx] = useState<CanvasRenderingContext2D | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [lastPoint, setLastPoint] = useState<StrokePoint | null>(null);\n  \n  // Fix: Correct type definition for strokes\n  const [strokes, setStrokes] = useState<Stroke[]>([]);\n  const [currentStroke, setCurrentStroke] = useState<StrokePoint[]>([]);\n  \n  const [hasDrawing, setHasDrawing] = useState(false);\n  \n  // State để theo dõi nếu có API key được cấu hình\n  const [hasApiKey, setHasApiKey] = useState<boolean>(false);\n  \n  // Kiểm tra và theo dõi sự thay đổi của API key trong localStorage\n  useEffect(() => {\n    // Kiểm tra ban đầu\n    const checkApiKey = () => {\n      const savedApiKey = localStorage.getItem('google_ai_api_key');\n      setHasApiKey(!!savedApiKey);\n    };\n    \n    // Kiểm tra ngay lập tức\n    checkApiKey();\n    \n    // Tạo một event listener để phát hiện thay đổi từ các tab/window khác\n    const handleStorageChange = (e: StorageEvent) => {\n      if (e.key === 'google_ai_api_key') {\n        checkApiKey();\n      }\n    };\n    \n    // Thêm event listener cho storage\n    window.addEventListener('storage', handleStorageChange);\n    \n    // Kiểm tra định kỳ mỗi 5 giây để đảm bảo đồng bộ\n    const intervalId = setInterval(checkApiKey, 5000);\n    \n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n      clearInterval(intervalId);\n    };\n  }, []);\n  \n  // Setup canvas with proper scaling and clean rendering\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    // Handle canvas scaling for better drawing precision\n    const resizeCanvas = () => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n      \n      const dpr = window.devicePixelRatio || 1;\n      const rect = canvas.getBoundingClientRect();\n      \n      // Thiết lập kích thước canvas với devicePixelRatio để vẽ rõ nét hơn\n      canvas.width = rect.width * dpr;\n      canvas.height = rect.height * dpr;\n      \n      // Thiết lập style để hiển thị đúng kích thước\n      canvas.style.width = `${rect.width}px`; \n      canvas.style.height = `${rect.height}px`;\n      \n      const context = canvas.getContext('2d', { willReadFrequently: true });\n      if (context) {\n        // Áp dụng scale theo devicePixelRatio\n        context.scale(dpr, dpr);\n        \n        // Thiết lập nét vẽ đậm và rõ hơn\n        context.lineWidth = 12; // Tăng độ đậm của nét vẽ\n        context.lineCap = \"round\";\n        context.lineJoin = \"round\";\n        context.strokeStyle = \"black\";\n        setCtx(context);\n        \n        // Redraw existing strokes after resize\n        redrawCanvas(context);\n      }\n    };\n    \n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n    \n    return () => window.removeEventListener('resize', resizeCanvas);\n  }, [strokes]);\n\n  // Function to redraw all strokes (used after resizing)\n  const redrawCanvas = useCallback((context: CanvasRenderingContext2D) => {\n    const dpr = window.devicePixelRatio || 1;\n    const canvas = context.canvas;\n    \n    context.clearRect(0, 0, canvas.width/dpr, canvas.height/dpr);\n    \n    // Draw all completed strokes\n    strokes.forEach(stroke => {\n      if (stroke.points.length < 2) return;\n      \n      context.beginPath();\n      context.moveTo(stroke.points[0].x, stroke.points[0].y);\n      \n      for (let i = 1; i < stroke.points.length; i++) {\n        const p0 = stroke.points[i - 1];\n        const p1 = stroke.points[i];\n        \n        // Use quadratic curves for smoother lines\n        const midPoint = {\n          x: (p0.x + p1.x) / 2,\n          y: (p0.y + p1.y) / 2\n        };\n        \n        context.quadraticCurveTo(p0.x, p0.y, midPoint.x, midPoint.y);\n      }\n      \n      context.stroke();\n    });\n  }, [strokes]);\n\n  // Get correct coordinates relative to canvas\n  const getCoordinates = (e: React.PointerEvent<HTMLCanvasElement>) => {\n    if (!canvasRef.current) return { x: 0, y: 0 };\n    \n    const rect = canvasRef.current.getBoundingClientRect();\n    // Không áp dụng scale ở đây, vì đã xử lý bằng context.scale()\n    \n    return {\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    };\n  };\n\n  // Start a new stroke when the user begins drawing\n  const startDrawing = (e: React.PointerEvent<HTMLCanvasElement>) => {\n    if (!ctx) return;\n    \n    e.preventDefault();\n    \n    // Bắt giữ pointer để tránh mất sự kiện khi vẽ nhanh\n    if (canvasRef.current) {\n      canvasRef.current.setPointerCapture(e.pointerId);\n    }\n    \n    setIsDrawing(true);\n    \n    const point = getCoordinates(e);\n    setLastPoint(point);\n    \n    // Start tracking the current stroke\n    setCurrentStroke([point]);\n    \n    ctx.beginPath();\n    ctx.moveTo(point.x, point.y);\n  };\n\n  // Update the stroke as the user continues drawing\n  const draw = (e: React.PointerEvent<HTMLCanvasElement>) => {\n    if (!isDrawing || !ctx || !lastPoint) return;\n    \n    e.preventDefault();\n    const currentPoint = getCoordinates(e);\n    \n    // Kiểm tra khoảng cách quá nhỏ để tránh quá nhiều điểm\n    const distance = Math.sqrt(\n      Math.pow(currentPoint.x - lastPoint.x, 2) + \n      Math.pow(currentPoint.y - lastPoint.y, 2)\n    );\n    \n    // Bỏ qua các điểm quá gần nhau\n    if (distance < 2) return;\n    \n    // Update current stroke data\n    setCurrentStroke(prev => [...prev, currentPoint]);\n    setHasDrawing(true);\n    \n    // Draw with smoothing\n    ctx.beginPath();\n    ctx.moveTo(lastPoint.x, lastPoint.y);\n    \n    // Smoothing curve for more natural writing\n    const midPoint = {\n      x: (lastPoint.x + currentPoint.x) / 2,\n      y: (lastPoint.y + currentPoint.y) / 2\n    };\n    \n    ctx.quadraticCurveTo(\n      lastPoint.x, \n      lastPoint.y, \n      midPoint.x, \n      midPoint.y\n    );\n    \n    ctx.stroke();\n    setLastPoint(currentPoint);\n  };\n\n  // Complete the stroke but don't trigger automatic recognition\n  const endDrawing = (e: React.PointerEvent<HTMLCanvasElement>) => {\n    if (!isDrawing || !ctx || !lastPoint) return;\n    \n    e.preventDefault();\n    \n    // Giải phóng pointer capture\n    if (canvasRef.current) {\n      canvasRef.current.releasePointerCapture(e.pointerId);\n    }\n    \n    // Complete the final line segment\n    const currentPoint = getCoordinates(e);\n    \n    ctx.beginPath();\n    ctx.moveTo(lastPoint.x, lastPoint.y);\n    ctx.lineTo(currentPoint.x, currentPoint.y);\n    ctx.stroke();\n    \n    // Save the completed stroke\n    setStrokes(prev => [...prev, { points: [...currentStroke, currentPoint] }]);\n    setCurrentStroke([]);\n    \n    setIsDrawing(false);\n    setLastPoint(null);\n  };\n\n  // Xử lý sự kiện khi pointer rời khỏi khu vực canvas nhưng người dùng vẫn đang vẽ\n  const handlePointerLeave = (e: React.PointerEvent<HTMLCanvasElement>) => {\n    // Chỉ xử lý khi đang vẽ\n    if (isDrawing && ctx && lastPoint) {\n      // Ghi nhận nét vẽ hiện tại\n      setStrokes(prev => [...prev, { points: [...currentStroke] }]);\n      setCurrentStroke([]);\n      setIsDrawing(false);\n      setLastPoint(null);\n      \n      // Giải phóng pointer capture\n      if (canvasRef.current) {\n        canvasRef.current.releasePointerCapture(e.pointerId);\n      }\n    }\n  };\n\n  // Clear the canvas and reset all state\n  const clearCanvas = () => {\n    if (!ctx || !canvasRef.current) return;\n    \n    const dpr = window.devicePixelRatio || 1;\n    ctx.clearRect(\n      0, \n      0, \n      canvasRef.current.width/dpr, \n      canvasRef.current.height/dpr\n    );\n    \n    setStrokes([]);\n    setCurrentStroke([]);\n    setHasDrawing(false);\n    onRecognizeKanji(null);\n    setError(null);\n  };\n\n  // Manual recognition when clicking the button\n  const recognizeKanji = async () => {\n    if (!canvasRef.current || !hasDrawing) {\n      setError(\"Vui lòng vẽ một chữ Kanji trước khi nhận dạng\");\n      return;\n    }\n    \n    // Lấy API key mới nhất từ localStorage\n    const savedApiKey = localStorage.getItem('google_ai_api_key');\n    const currentHasApiKey = !!savedApiKey;\n    \n    // Chuẩn bị canvas cho nhận dạng tốt hơn\n    const canvas = canvasRef.current;\n    const tempCanvas = document.createElement('canvas');\n    const size = 800; // Tăng kích thước lên 800px để chi tiết hơn\n    \n    tempCanvas.width = size;\n    tempCanvas.height = size;\n    const tempCtx = tempCanvas.getContext('2d', { willReadFrequently: true });\n    \n    if (!tempCtx) {\n      setError(\"Không thể tạo canvas tạm thời\");\n      return;\n    }\n    \n    // Vẽ nền trắng\n    tempCtx.fillStyle = 'white';\n    tempCtx.fillRect(0, 0, size, size);\n    \n    // Tính toán tọa độ của tất cả các nét vẽ để xác định vùng vẽ\n    let allPoints: StrokePoint[] = [];\n    strokes.forEach(stroke => {\n      allPoints = [...allPoints, ...stroke.points];\n    });\n    \n    if (allPoints.length === 0) {\n      setError(\"Không có đủ dữ liệu nét vẽ\");\n      return;\n    }\n    \n    // Tìm tọa độ giới hạn của nét vẽ\n    const minX = Math.min(...allPoints.map(p => p.x));\n    const minY = Math.min(...allPoints.map(p => p.y));\n    const maxX = Math.max(...allPoints.map(p => p.x));\n    const maxY = Math.max(...allPoints.map(p => p.y));\n    \n    // Tính toán kích thước và vị trí trung tâm\n    const width = maxX - minX;\n    const height = maxY - minY;\n    const centerX = minX + width / 2;\n    const centerY = minY + height / 2;\n    \n    // Để tránh các nét vẽ quá nhỏ hoặc quá lớn, tính toán tỷ lệ phù hợp\n    const maxDimension = Math.max(width, height);\n    // Sử dụng 70% không gian canvas để kanji không bị quá nhỏ hoặc quá lớn\n    const targetSize = size * 0.7;\n    let scaleFactor = targetSize / maxDimension;\n    \n    // Giới hạn tỷ lệ tối thiểu và tối đa\n    if (scaleFactor < 1) scaleFactor = 1;\n    if (scaleFactor > 10) scaleFactor = 10;\n    \n    // Cấu hình vẽ cho nét đậm, rõ ràng\n    tempCtx.lineWidth = 26; // Tăng độ đậm hơn nữa\n    tempCtx.lineCap = \"round\";\n    tempCtx.lineJoin = \"round\";\n    tempCtx.strokeStyle = \"black\";\n    \n    // Vẽ lại từng nét với tỷ lệ và căn giữa\n    strokes.forEach((stroke, strokeIndex) => {\n      if (stroke.points.length < 2) return;\n      \n      tempCtx.beginPath();\n      \n      // Vẽ từng nét với tỷ lệ mới và căn giữa\n      const canvasCenterX = size / 2;\n      const canvasCenterY = size / 2;\n      \n      const startX = (stroke.points[0].x - centerX) * scaleFactor + canvasCenterX;\n      const startY = (stroke.points[0].y - centerY) * scaleFactor + canvasCenterY;\n      \n      tempCtx.moveTo(startX, startY);\n      \n      for (let i = 1; i < stroke.points.length; i++) {\n        const p0 = stroke.points[i - 1];\n        const p1 = stroke.points[i];\n        \n        const x0 = (p0.x - centerX) * scaleFactor + canvasCenterX;\n        const y0 = (p0.y - centerY) * scaleFactor + canvasCenterY;\n        const x1 = (p1.x - centerX) * scaleFactor + canvasCenterX;\n        const y1 = (p1.y - centerY) * scaleFactor + canvasCenterY;\n        \n        // Sử dụng đường cong Bezier cho nét mượt\n        if (i === 1) {\n          // Nét đầu tiên dùng đường thẳng\n          tempCtx.lineTo(x1, y1);\n        } else {\n          // Các nét tiếp theo dùng đường cong\n          const midX = (x0 + x1) / 2;\n          const midY = (y0 + y1) / 2;\n          tempCtx.quadraticCurveTo(x0, y0, midX, midY);\n        }\n      }\n      \n      // Vẽ nét cuối\n      const lastPoint = stroke.points[stroke.points.length - 1];\n      const lastX = (lastPoint.x - centerX) * scaleFactor + canvasCenterX;\n      const lastY = (lastPoint.y - centerY) * scaleFactor + canvasCenterY;\n      tempCtx.lineTo(lastX, lastY);\n      \n      tempCtx.stroke();\n    });\n    \n    // Thêm bước xử lý hình ảnh để làm rõ nét vẽ\n    enhanceImage(tempCtx, size);\n    \n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      // Lấy dữ liệu từ canvas tạm thời với chất lượng cao\n      const imageData = tempCanvas.toDataURL('image/png', 1.0);\n      \n      console.log(\"Image data length:\", imageData.length);\n      \n      // Sử dụng API phù hợp dựa vào lựa chọn của người dùng\n      const apiEndpoint = currentHasApiKey ? '/api/ai/recognize-kanji-client' : '/api/ai/recognize-kanji';\n      \n      const requestBody = currentHasApiKey \n        ? { image: imageData, apiKey: savedApiKey } \n        : { image: imageData };\n      \n      const response = await fetch(apiEndpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(requestBody),\n      });\n      \n      const data = await response.json();\n      \n      if (!response.ok) {\n        // Xử lý lỗi API key\n        if (currentHasApiKey && response.status === 401) {\n          setError(\"API key không hợp lệ hoặc đã hết hạn. Vui lòng kiểm tra lại key tại trang chủ.\");\n          throw new Error('API key không hợp lệ');\n        }\n        \n        if (response.status === 500 && data.error?.includes('deprecated')) {\n          throw new Error('AI model has been deprecated. Please contact admin for an update.');\n        }\n        throw new Error(data.error || 'Failed to recognize kanji');\n      }\n      \n      if (!data.success) {\n        throw new Error(data.error || 'Recognition failed');\n      }\n      \n      if (!data.kanji || !data.kanji.character) {\n        throw new Error('Invalid response format from server');\n      }\n      \n      onRecognizeKanji(data.kanji);\n    } catch (error: unknown) {\n      console.error('Error recognizing kanji:', error);\n      if (error instanceof Error) {\n        if (error.message?.includes('deprecated')) {\n          setError(\"Hệ thống AI đã lỗi thời. Vui lòng liên hệ quản trị viên để cập nhật.\");\n        } else if (error.message?.includes('Invalid image format')) {\n          setError(\"Định dạng ảnh không hợp lệ. Vui lòng thử vẽ lại.\");\n        } else if (error.message?.includes('Invalid response format')) {\n          setError(\"Lỗi định dạng dữ liệu từ máy chủ. Vui lòng thử lại.\");\n        } else if (error.message?.includes('API key không hợp lệ')) {\n          // Lỗi đã được xử lý ở trên\n        } else {\n          setError(`Không thể nhận dạng Kanji: ${error.message || 'Đã xảy ra lỗi'}. Vui lòng thử lại.`);\n        }\n      } else {\n        setError(\"Không thể nhận dạng Kanji: Đã xảy ra lỗi. Vui lòng thử lại.\");\n      }\n      onRecognizeKanji(null);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  // Hàm xử lý hình ảnh để làm rõ nét vẽ\n  const enhanceImage = (ctx: CanvasRenderingContext2D, size: number) => {\n    try {\n      // Lấy dữ liệu hình ảnh\n      const imageData = ctx.getImageData(0, 0, size, size);\n      const data = imageData.data;\n      \n      // Xử lý tăng độ tương phản\n      for (let i = 0; i < data.length; i += 4) {\n        // Nếu pixel gần đen (nét vẽ), làm cho nó hoàn toàn đen\n        if (data[i] < 128) {\n          data[i] = 0;      // R\n          data[i + 1] = 0;  // G\n          data[i + 2] = 0;  // B\n        } \n        // Nếu pixel gần trắng (nền), làm cho nó hoàn toàn trắng\n        else {\n          data[i] = 255;    // R\n          data[i + 1] = 255;// G\n          data[i + 2] = 255;// B\n        }\n        // Giữ nguyên kênh alpha\n        data[i + 3] = data[i + 3];\n      }\n      \n      // Cập nhật lại hình ảnh\n      ctx.putImageData(imageData, 0, 0);\n    } catch (error) {\n      console.error(\"Error enhancing image:\", error);\n      // Tiếp tục mà không có xử lý nâng cao\n    }\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"border-2 border-gray-300 rounded-lg overflow-hidden\">\n        <canvas\n          ref={canvasRef}\n          className=\"bg-white w-full h-[400px] touch-none\"\n          onPointerDown={startDrawing}\n          onPointerMove={draw}\n          onPointerUp={endDrawing}\n          onPointerLeave={handlePointerLeave}\n          style={{ touchAction: \"none\" }} // Prevent scrolling on touch\n        />\n      </div>\n      \n      <div className=\"flex gap-4\">\n        <button \n          onClick={clearCanvas} \n          className=\"flex-1 py-2 px-4 border border-gray-300 rounded-lg hover:bg-gray-50\"\n          disabled={isLoading}\n        >\n          Xóa\n        </button>\n        <button \n          onClick={recognizeKanji} \n          className=\"flex-1 py-2 px-4 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-blue-300\"\n          disabled={isLoading}\n        >\n          {isLoading ? \"Đang nhận dạng...\" : \"Nhận dạng Kanji\"}\n        </button>\n      </div>\n      \n      {error && (\n        <div className=\"p-3 bg-red-50 border border-red-200 text-red-600 rounded-lg text-sm\">\n          <p className=\"font-medium mb-1\">Lỗi:</p>\n          <p>{error}</p>\n          {typeof error === 'string' && error.includes('AI đã lỗi thời') && (\n            <p className=\"mt-1 text-xs\">\n              Chi tiết kỹ thuật: Gemini 1.0 Pro Vision đã ngừng hoạt động từ 12/7/2024. \n              Cần cập nhật lên gemini-2.0-flash.\n            </p>\n          )}\n        </div>\n      )}\n      \n      <div className=\"text-xs text-gray-500 mt-2\">\n        <p className=\"font-medium\">Hướng dẫn vẽ Kanji tốt nhất:</p>\n        <ul className=\"list-disc pl-5 mt-1\">\n          <li>Vẽ to, rõ ràng và đầy đủ nét</li>\n          <li>Vẽ chính giữa canvas</li>\n          <li>Vẽ đầy đủ số nét của chữ Kanji</li>\n          <li>Tránh vẽ quá nhỏ hoặc quá nhanh</li>\n          <li>Vẽ theo thứ tự nét chuẩn của Kanji</li>\n          <li><strong>Sau khi vẽ xong, nhấn nút \"Nhận dạng Kanji\"</strong></li>\n        </ul>\n      </div>\n      \n      <div className=\"text-center mt-2\">\n        <button\n          onClick={() => {\n            if (canvasRef.current) {\n              // Vẽ ví dụ mẫu kanji đơn giản\n              clearCanvas();\n              // Để phòng khi clearCanvas chưa xong, chờ một tick\n              setTimeout(() => {\n                const ctx = canvasRef.current?.getContext('2d');\n                if (ctx) {\n                  // Vẽ kanji 日 (nhật) như một ví dụ\n                  const centerX = (canvasRef.current?.width || 0) / 2;\n                  const centerY = (canvasRef.current?.height || 0) / 2;\n                  const size = 100;\n                  \n                  // Vẽ hình vuông ngoài\n                  ctx.beginPath();\n                  ctx.moveTo(centerX - size, centerY - size);\n                  ctx.lineTo(centerX + size, centerY - size);\n                  ctx.lineTo(centerX + size, centerY + size);\n                  ctx.lineTo(centerX - size, centerY + size);\n                  ctx.lineTo(centerX - size, centerY - size);\n                  ctx.stroke();\n                  \n                  // Vẽ đường ngang ở giữa\n                  ctx.beginPath();\n                  ctx.moveTo(centerX - size, centerY);\n                  ctx.lineTo(centerX + size, centerY);\n                  ctx.stroke();\n                  \n                  // Vẽ đường dọc ở giữa\n                  ctx.beginPath();\n                  ctx.moveTo(centerX, centerY - size);\n                  ctx.lineTo(centerX, centerY + size);\n                  ctx.stroke();\n                  \n                  setHasDrawing(true);\n                  setStrokes([\n                    {\n                      points: [\n                        {x: centerX - size, y: centerY - size},\n                        {x: centerX + size, y: centerY - size},\n                        {x: centerX + size, y: centerY + size},\n                        {x: centerX - size, y: centerY + size},\n                        {x: centerX - size, y: centerY - size}\n                      ]\n                    },\n                    {\n                      points: [\n                        {x: centerX - size, y: centerY},\n                        {x: centerX + size, y: centerY}\n                      ]\n                    },\n                    {\n                      points: [\n                        {x: centerX, y: centerY - size},\n                        {x: centerX, y: centerY + size}\n                      ]\n                    }\n                  ]);\n                }\n              }, 100);\n            }\n          }}\n          className=\"text-sm text-blue-600 underline\"\n        >\n          Vẽ kanji mẫu để thử nghiệm\n        </button>\n      </div>\n      \n      {/* Hiển thị trạng thái của API key */}\n      <div className=\"mt-4 text-center\">\n        <div className=\"inline-flex items-center px-3 py-1 rounded-full text-xs bg-gray-100\">\n          <span className={`w-2 h-2 rounded-full mr-2 ${hasApiKey ? 'bg-green-500' : 'bg-gray-400'}`}></span>\n          <span>\n            {hasApiKey \n              ? \"Đang sử dụng API key riêng từ trang chủ\" \n              : \"Đang sử dụng API key hệ thống\"}\n          </span>\n        </div>\n        {hasApiKey && (\n          <p className=\"text-xs text-gray-500 mt-1\">\n            Thay đổi API key tại trang chủ\n          </p>\n        )}\n        {!hasApiKey && (\n          <p className=\"text-xs text-gray-500 mt-1\">\n            Để tránh tình trạng quá tải API, bạn có thể thiết lập API key riêng tại <a href=\"/\" className=\"text-blue-600 underline\">trang chủ</a>\n          </p>\n        )}\n      </div>\n      \n      {isLoading && (\n        <div className=\"flex items-center justify-center py-2 text-sm text-blue-600\">\n          <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n            <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n            <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n          </svg>\n          Đang phân tích nét vẽ...\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 796, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Code/japanese-learning/components/features/kanji-recognition/KanjiDetails.tsx"],"sourcesContent":["// components/features/kanji-recognition/KanjiDetails.tsx\nimport { KanjiItem } from \"@/types\";\n\ninterface KanjiDetailsProps {\n  kanji: KanjiItem | null;\n  isLoading?: boolean;\n}\n\nexport default function KanjiDetails({ kanji, isLoading = false }: KanjiDetailsProps) {\n  if (isLoading) {\n    return (\n      <div className=\"h-full flex items-center justify-center border rounded-lg p-12\">\n        <div className=\"text-center\">\n          <div className=\"inline-block animate-pulse\">\n            <span className=\"text-7xl font-japanese text-gray-300\">字</span>\n          </div>\n          <p className=\"mt-4 text-gray-500\">Đang nhận dạng chữ Kanji...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!kanji) {\n    return (\n      <div className=\"h-full flex items-center justify-center border rounded-lg p-12\">\n        <div className=\"text-center text-gray-500\">\n          <p className=\"text-lg mb-2\">Vẽ một chữ Kanji để nhận dạng</p>\n          <p className=\"text-sm\">Hệ thống AI sẽ phân tích và cung cấp thông tin chi tiết về chữ Kanji của bạn</p>\n          <p className=\"text-xs mt-4 text-gray-400\">Hệ thống sẽ tự động nhận dạng sau khi bạn hoàn thành nét vẽ</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"border rounded-lg p-6 space-y-4\">\n      <div className=\"text-center\">\n        <span className=\"text-7xl font-japanese\">\n          {kanji.character}\n        </span>\n      </div>\n      \n      <div className=\"grid grid-cols-2 gap-4 mt-6\">\n        <div>\n          <h3 className=\"font-medium text-gray-500\">Âm On:</h3>\n          <p>{kanji.onReading.join(\", \")}</p>\n        </div>\n        <div>\n          <h3 className=\"font-medium text-gray-500\">Âm Kun:</h3>\n          <p>{kanji.kunReading.join(\", \")}</p>\n        </div>\n        <div>\n          <h3 className=\"font-medium text-gray-500\">Số nét:</h3>\n          <p>{kanji.strokeCount}</p>\n        </div>\n        <div>\n          <h3 className=\"font-medium text-gray-500\">JLPT:</h3>\n          <p>{kanji.jlptLevel}</p>\n        </div>\n      </div>\n      \n      <div>\n        <h3 className=\"font-medium text-gray-500\">Nghĩa:</h3>\n        <p>{kanji.meaning.join(\", \")}</p>\n      </div>\n      \n      <div>\n        <h3 className=\"font-medium text-gray-500\">Ví dụ:</h3>\n        <ul className=\"space-y-2 mt-2\">\n          {kanji.examples.map((example, index) => (\n            <li key={index} className=\"border-b pb-2\">\n              <p className=\"font-medium\">{example.word}</p>\n              <p className=\"text-sm\">{example.reading}</p>\n              <p className=\"text-sm text-gray-600\">{example.meaning}</p>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"AAAA,yDAAyD;;;;;;AAQ1C,SAAS,aAAa,EAAE,KAAK,EAAE,YAAY,KAAK,EAAqB;IAClF,IAAI,WAAW;QACb,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAK,WAAU;sCAAuC;;;;;;;;;;;kCAEzD,8OAAC;wBAAE,WAAU;kCAAqB;;;;;;;;;;;;;;;;;IAI1C;IAEA,IAAI,CAAC,OAAO;QACV,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAE,WAAU;kCAAe;;;;;;kCAC5B,8OAAC;wBAAE,WAAU;kCAAU;;;;;;kCACvB,8OAAC;wBAAE,WAAU;kCAA6B;;;;;;;;;;;;;;;;;IAIlD;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAK,WAAU;8BACb,MAAM,SAAS;;;;;;;;;;;0BAIpB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;;0CACC,8OAAC;gCAAG,WAAU;0CAA4B;;;;;;0CAC1C,8OAAC;0CAAG,MAAM,SAAS,CAAC,IAAI,CAAC;;;;;;;;;;;;kCAE3B,8OAAC;;0CACC,8OAAC;gCAAG,WAAU;0CAA4B;;;;;;0CAC1C,8OAAC;0CAAG,MAAM,UAAU,CAAC,IAAI,CAAC;;;;;;;;;;;;kCAE5B,8OAAC;;0CACC,8OAAC;gCAAG,WAAU;0CAA4B;;;;;;0CAC1C,8OAAC;0CAAG,MAAM,WAAW;;;;;;;;;;;;kCAEvB,8OAAC;;0CACC,8OAAC;gCAAG,WAAU;0CAA4B;;;;;;0CAC1C,8OAAC;0CAAG,MAAM,SAAS;;;;;;;;;;;;;;;;;;0BAIvB,8OAAC;;kCACC,8OAAC;wBAAG,WAAU;kCAA4B;;;;;;kCAC1C,8OAAC;kCAAG,MAAM,OAAO,CAAC,IAAI,CAAC;;;;;;;;;;;;0BAGzB,8OAAC;;kCACC,8OAAC;wBAAG,WAAU;kCAA4B;;;;;;kCAC1C,8OAAC;wBAAG,WAAU;kCACX,MAAM,QAAQ,CAAC,GAAG,CAAC,CAAC,SAAS,sBAC5B,8OAAC;gCAAe,WAAU;;kDACxB,8OAAC;wCAAE,WAAU;kDAAe,QAAQ,IAAI;;;;;;kDACxC,8OAAC;wCAAE,WAAU;kDAAW,QAAQ,OAAO;;;;;;kDACvC,8OAAC;wCAAE,WAAU;kDAAyB,QAAQ,OAAO;;;;;;;+BAH9C;;;;;;;;;;;;;;;;;;;;;;AAUrB","debugId":null}},
    {"offset": {"line": 1097, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Code/japanese-learning/components/features/kanji-recognition/KanjiRecognition.tsx"],"sourcesContent":["// components/features/kanji-recognition/KanjiRecognition.tsx\n\"use client\";\n\nimport { useState } from \"react\";\nimport KanjiCanvas from \"./KanjiCanvas\";\nimport KanjiDetails from \"./KanjiDetails\";\nimport { KanjiItem } from \"@/types\";\n\nexport default function KanjiRecognition() {\n  const [recognizedKanji, setRecognizedKanji] = useState<KanjiItem | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  return (\n    <div className=\"flex flex-col md:flex-row gap-8\">\n      <div className=\"md:w-1/2\">\n        <KanjiCanvas \n          onRecognizeKanji={setRecognizedKanji}\n          isLoading={isLoading}\n          setIsLoading={setIsLoading}\n        />\n      </div>\n      \n      <div className=\"md:w-1/2\">\n        <KanjiDetails \n          kanji={recognizedKanji} \n          isLoading={isLoading}\n        />\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"AAAA,6DAA6D;;;;;AAG7D;AACA;AACA;AAJA;;;;;AAOe,SAAS;IACtB,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAoB;IACzE,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,8JAAA,CAAA,UAAW;oBACV,kBAAkB;oBAClB,WAAW;oBACX,cAAc;;;;;;;;;;;0BAIlB,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,+JAAA,CAAA,UAAY;oBACX,OAAO;oBACP,WAAW;;;;;;;;;;;;;;;;;AAKrB","debugId":null}}]
}